# Default values for Traefik
# This is a YAML-formatted file.
# Declare variables to be passed into templates

# -- Only dashboard & healthcheck IngressRoute are supported. It's recommended to create workloads CR outside of this Chart.
ingressRoute:
  dashboard:
    # -- Create an IngressRoute for the dashboard
    enabled: true
#     # -- Additional ingressRoute annotations (e.g. for kubernetes.io/ingress.class)
#     annotations: {}
#     # -- Additional ingressRoute labels (e.g. for filtering IngressRoute by custom labels)
#     labels: {}
    # -- The router match rule used for the dashboard ingressRoute
    matchRule: PathPrefix(`/dashboard`) || PathPrefix(`/api`)
    # -- The internal service used for the dashboard ingressRoute
    services:
      - name: api@internal
        kind: TraefikService
    # -- Specify the allowed entrypoints to use for the dashboard ingress route, (e.g. traefik, web, websecure).
    # By default, it's using traefik entrypoint, which is not exposed.
    # /!\ Do not expose your dashboard without any protection over the internet /!\
    entryPoints: ["traefik"]
  #   # -- Additional ingressRoute middlewares (e.g. for authentication)
  #   middlewares: []
  #   # -- TLS options (e.g. secret containing certificate)
  #   tls: {}
  # healthcheck:
  #   # -- Create an IngressRoute for the healthcheck probe
  #   enabled: false
  #   # -- Additional ingressRoute annotations (e.g. for kubernetes.io/ingress.class)
  #   annotations: {}
  #   # -- Additional ingressRoute labels (e.g. for filtering IngressRoute by custom labels)
  #   labels: {}
  #   # -- The router match rule used for the healthcheck ingressRoute
#     matchRule: PathPrefix(`/ping`)
#     # -- The internal service used for the healthcheck ingressRoute
#     services:
#       - name: ping@internal
#         kind: TraefikService
#     # -- Specify the allowed entrypoints to use for the healthcheck ingress route, (e.g. traefik, web, websecure).
#     # By default, it's using traefik entrypoint, which is not exposed.
#     entryPoints: ["traefik"]
#     # -- Additional ingressRoute middlewares (e.g. for authentication)
#     middlewares: []
#     # -- TLS options (e.g. secret containing certificate)
#     tls: {}

updateStrategy:  # @schema additionalProperties: false
  # -- Customize updateStrategy of Deployment or DaemonSet
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 1  # @schema type:[integer, string, null]
    maxSurge: 2        # @schema type:[integer, string, null]

# providers:  # @schema additionalProperties: false
#   file:
#     # -- Create a file provider
#     enabled: false
#     # -- Allows Traefik to automatically watch for file changes
#     watch: true
#     # -- File content (YAML format, go template supported) (see https://doc.traefik.io/traefik/providers/file/)
#     content: ""

# # -- Add volumes to the traefik pod. The volume name will be passed to tpl.
# # This can be used to mount a cert pair or a configmap that holds a config.toml file.
# # After the volume has been mounted, add the configs into traefik by using the `additionalArguments` list below, eg:
# # `additionalArguments:
# # - "--providers.file.filename=/config/dynamic.toml"
# # - "--ping"
# # - "--ping.entrypoint=web"`
# volumes: []
# # - name: public-cert
# #   mountPath: "/certs"
# #   type: secret
# # - name: '{{ printf "%s-configs" .Release.Name }}'
# #   mountPath: "/config"
# #   type: configMap

# # -- Additional volumeMounts to add to the Traefik container
# additionalVolumeMounts: []
# # -- For instance when using a logshipper for access logs
# # - name: traefik-logs
# #   mountPath: /var/log/traefik

# logs:
#   general:
#     # -- Set [logs format](https://doc.traefik.io/traefik/observability/logs/#format)
#     format:  # @schema enum:["common", "json", null]; type:[string, null]; default: "common"
#     # By default, the level is set to INFO.
#     # -- Alternative logging levels are TRACE, DEBUG, INFO, WARN, ERROR, FATAL, and PANIC.
#     level: "INFO"  # @schema enum:[TRACE,DEBUG,INFO,WARN,ERROR,FATAL,PANIC]; default: "INFO"
#     # -- To write the logs into a log file, use the filePath option.
#     filePath: ""
#     # -- When set to true and format is common, it disables the colorized output.
#     noColor: false
#   access:
#     # -- To enable access logs
#     enabled: false
#     # -- Set [access log format](https://doc.traefik.io/traefik/observability/access-logs/#format)
#     format:  # @schema enum:["common", "json", null]; type:[string, null]; default: "common"
#     # filePath: "/var/log/traefik/access.log
#     # -- Set [bufferingSize](https://doc.traefik.io/traefik/observability/access-logs/#bufferingsize)
#     bufferingSize:  # @schema type:[integer, null]
#     # -- Set [filtering](https://docs.traefik.io/observability/access-logs/#filtering)
#     filters:  # @schema additionalProperties: false
#       # -- Set statusCodes, to limit the access logs to requests with a status codes in the specified range
#       statuscodes: ""
#       # -- Set retryAttempts, to keep the access logs when at least one retry has happened
#       retryattempts: false
#       # -- Set minDuration, to keep access logs when requests take longer than the specified duration
#       minduration: ""
#     # -- Enables accessLogs for internal resources. Default: false.
#     addInternals: false
#     fields:
#       general:
#         # -- Set default mode for fields.names
#         defaultmode: keep  # @schema enum:[keep, drop, redact]; default: keep
#         # -- Names of the fields to limit.
#         names: {}
#       # -- [Limit logged fields or headers](https://doc.traefik.io/traefik/observability/access-logs/#limiting-the-fieldsincluding-headers)
#       headers:
#         # -- Set default mode for fields.headers
#         defaultmode: drop  # @schema enum:[keep, drop, redact]; default: drop
#         names: {}

# metrics:
#   # -- Enable metrics for internal resources. Default: false
#   addInternals: false

#   ## Prometheus is enabled by default.
#   ## It can be disabled by setting "prometheus: null"
#   prometheus:
#     # -- Entry point used to expose metrics.
#     entryPoint: metrics
#     # -- Enable metrics on entry points. Default: true
#     addEntryPointsLabels:  # @schema type:[boolean, null]
#     # -- Enable metrics on routers. Default: false
#     addRoutersLabels:  # @schema type:[boolean, null]
#     # -- Enable metrics on services. Default: true
#     addServicesLabels:  # @schema type:[boolean, null]
#     # -- Buckets for latency metrics. Default="0.1,0.3,1.2,5.0"
#     buckets: ""
#     # -- When manualRouting is true, it disables the default internal router in
#     ## order to allow creating a custom router for prometheus@internal service.
#     manualRouting: false
#     # -- Add HTTP header labels to metrics. See EXAMPLES.md or upstream doc for usage.
#     headerLabels: {}  # @schema type:[object, null]
#     service:
#       # -- Create a dedicated metrics service to use with ServiceMonitor
#       enabled: false
#       labels: {}
#       annotations: {}
#     # -- When set to true, it won't check if Prometheus Operator CRDs are deployed
#     disableAPICheck:  # @schema type:[boolean, null]
#     serviceMonitor:
#       # -- Enable optional CR for Prometheus Operator. See EXAMPLES.md for more details.
#       enabled: false
#       metricRelabelings: []
#       relabelings: []
#       jobLabel: ""
#       interval: ""
#       honorLabels: false
#       scrapeTimeout: ""
#       honorTimestamps: false
#       enableHttp2: false
#       followRedirects: false
#       additionalLabels: {}
#       namespace: ""
#       namespaceSelector: {}
#     prometheusRule:
#       # -- Enable optional CR for Prometheus Operator. See EXAMPLES.md for more details.
#       enabled: false
#       additionalLabels: {}
#       namespace: ""

global:
  checkNewVersion: true
  # -- Please take time to consider whether or not you wish to share anonymous data with us
  # See https://doc.traefik.io/traefik/contributing/data-collection/
  sendAnonymousUsage: false
  # -- Required for Azure Marketplace integration.
  # See https://learn.microsoft.com/en-us/partner-center/marketplace-offers/azure-container-technical-assets-kubernetes?tabs=linux,linux2#update-the-helm-chart

# # -- Additional arguments to be passed at Traefik's binary
# # See [CLI Reference](https://docs.traefik.io/reference/static-configuration/cli/)
# # Use curly braces to pass values: `helm install --set="additionalArguments={--providers.kubernetesingress.ingressclass=traefik-internal,--log.level=DEBUG}"`
# additionalArguments: []
# #  - "--providers.kubernetesingress.ingressclass=traefik-internal"
# #  - "--log.level=DEBUG"

# # -- Additional Environment variables to be passed to Traefik's binary
# # @default -- See _values.yaml_
# env: []

# # -- Environment variables to be passed to Traefik's binary from configMaps or secrets
# envFrom: []

ports:
  # traefik:
    # port: 8080
#     # -- Use hostPort if set.
#     hostPort:  # @schema type:[integer, null]; minimum:0
#     # -- Use hostIP if set. If not set, Kubernetes will default to 0.0.0.0, which
#     # means it's listening on all your interfaces and all your IPs. You may want
#     # to set this value if you need traefik to listen on specific interface
#     # only.
#     hostIP:  # @schema type:[string, null]

#     # Defines whether the port is exposed if service.type is LoadBalancer or
#     # NodePort.
#     #
#     # -- You SHOULD NOT expose the traefik port on production deployments.
#     # If you want to access it from outside your cluster,
#     # use `kubectl port-forward` or create a secure ingress
#     expose:
#       default: false
#     # -- The exposed port for this service
#     exposedPort: 8080
#     # -- The port protocol (TCP/UDP)
#     protocol: TCP

  web:
    ## -- Enable this entrypoint as a default entrypoint. When a service doesn't explicitly set an entrypoint it will only use this entrypoint.
    # asDefault: true
    port: 80
    # hostPort: 8000
    # containerPort: 8000
    expose:
      default: true
    exposedPort: 80
    # ## -- Different target traefik port on the cluster, useful for IP type LB
    # targetPort:  # @schema type:[string, integer, null]; minimum:0
    # The port protocol (TCP/UDP)
    protocol: TCP
    # -- See [upstream documentation](https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport)
#     nodePort:  # @schema type:[integer, null]; minimum:0
    redirections:
      # -- Port Redirections
      # Added in 2.2, one can make permanent redirects via entrypoints.
      # Same sets of parameters: to, scheme, permanent and priority.
      # https://docs.traefik.io/routing/entrypoints/#redirection
      entryPoint:
        to: websecure
        scheme: https
        permanent: true
#     forwardedHeaders:
#       # -- Trust forwarded headers information (X-Forwarded-*).
#       trustedIPs: []
#       insecure: false
#     proxyProtocol:
#       # -- Enable the Proxy Protocol header parsing for the entry point
#       trustedIPs: []
#       insecure: false
#     # -- Set transport settings for the entrypoint; see also
#     # https://doc.traefik.io/traefik/routing/entrypoints/#transport
#     transport:
#       respondingTimeouts:
#         readTimeout:   # @schema type:[string, integer, null]
#         writeTimeout:  # @schema type:[string, integer, null]
#         idleTimeout:   # @schema type:[string, integer, null]
#       lifeCycle:
#         requestAcceptGraceTimeout:  # @schema type:[string, integer, null]
#         graceTimeOut:               # @schema type:[string, integer, null]
#       keepAliveMaxRequests:         # @schema type:[integer, null]; minimum:0
#       keepAliveMaxTime:             # @schema type:[string, integer, null]
  websecure:
    ## -- Enable this entrypoint as a default entrypoint. When a service doesn't explicitly set an entrypoint it will only use this entrypoint.
    # asDefault: true
    port: 443
    hostPort:  # @schema type:[integer, null]; minimum:0
    containerPort:  # @schema type:[integer, null]; minimum:0
    expose:
      default: true
    exposedPort: 443
#     ## -- Different target traefik port on the cluster, useful for IP type LB
#     targetPort:  # @schema type:[string, integer, null]; minimum:0
#     ## -- The port protocol (TCP/UDP)
#     protocol: TCP
#     # -- See [upstream documentation](https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport)
#     nodePort:  # @schema type:[integer, null]; minimum:0
#     # -- See [upstream documentation](https://kubernetes.io/docs/concepts/services-networking/service/#application-protocol)
#     appProtocol:  # @schema type:[string, null]
#     # -- See [upstream documentation](https://doc.traefik.io/traefik/routing/entrypoints/#allowacmebypass)
#     allowACMEByPass: false
#     http3:
#       ## -- Enable HTTP/3 on the entrypoint
#       ## Enabling it will also enable http3 experimental feature
#       ## https://doc.traefik.io/traefik/routing/entrypoints/#http3
#       ## There are known limitations when trying to listen on same ports for
#       ## TCP & UDP (Http3). There is a workaround in this chart using dual Service.
#       ## https://github.com/kubernetes/kubernetes/issues/47249#issuecomment-587960741
#       enabled: false
#       advertisedPort:  # @schema type:[integer, null]; minimum:0
#     forwardedHeaders:
#         # -- Trust forwarded headers information (X-Forwarded-*).
#       trustedIPs: []
#       insecure: false
#     proxyProtocol:
#       # -- Enable the Proxy Protocol header parsing for the entry point
#       trustedIPs: []
#       insecure: false
#     # -- See [upstream documentation](https://doc.traefik.io/traefik/routing/entrypoints/#transport)
#     transport:
#       respondingTimeouts:
#         readTimeout:   # @schema type:[string, integer, null]
#         writeTimeout:  # @schema type:[string, integer, null]
#         idleTimeout:   # @schema type:[string, integer, null]
#       lifeCycle:
#         requestAcceptGraceTimeout:  # @schema type:[string, integer, null]
#         graceTimeOut:               # @schema type:[string, integer, null]
#       keepAliveMaxRequests:         # @schema type:[integer, null]; minimum:0
#       keepAliveMaxTime:             # @schema type:[string, integer, null]
#     # --  See [upstream documentation](https://doc.traefik.io/traefik/routing/entrypoints/#tls)
#     tls:
#       enabled: true
#       options: ""
#       certResolver: ""
#       domains: []
#     # -- One can apply Middlewares on an entrypoint
#     # https://doc.traefik.io/traefik/middlewares/overview/
#     # https://doc.traefik.io/traefik/routing/entrypoints/#middlewares
#     # -- /!\ It introduces here a link between your static configuration and your dynamic configuration /!\
#     # It follows the provider naming convention: https://doc.traefik.io/traefik/providers/overview/#provider-namespace
#     #   - namespace-name1@kubernetescrd
#     #   - namespace-name2@kubernetescrd
#     middlewares: []
#   metrics:
#     # -- When using hostNetwork, use another port to avoid conflict with node exporter:
#     # https://github.com/prometheus/prometheus/wiki/Default-port-allocations
#     port: 9100
#     # -- You may not want to expose the metrics port on production deployments.
#     # If you want to access it from outside your cluster,
#     # use `kubectl port-forward` or create a secure ingress
#     expose:
#       default: false
#     # -- The exposed port for this service
#     exposedPort: 9100
#     # -- The port protocol (TCP/UDP)
#     protocol: TCP

# # -- TLS Options are created as [TLSOption CRDs](https://doc.traefik.io/traefik/https/tls/#tls-options)
# # When using `labelSelector`, you'll need to set labels on tlsOption accordingly.
# # See EXAMPLE.md for details.
# tlsOptions: {}

# # -- TLS Store are created as [TLSStore CRDs](https://doc.traefik.io/traefik/https/tls/#default-certificate). This is useful if you want to set a default certificate. See EXAMPLE.md for details.
# tlsStore: {}

# service:
#   enabled: true
#   ## -- Single service is using `MixedProtocolLBService` feature gate.
#   ## -- When set to false, it will create two Service, one for TCP and one for UDP.
#   single: true
#   type: LoadBalancer
#   # -- Additional annotations applied to both TCP and UDP services (e.g. for cloud provider specific config)
#   annotations: {}
#   # -- Additional annotations for TCP service only
#   annotationsTCP: {}
#   # -- Additional annotations for UDP service only
#   annotationsUDP: {}
#   # -- Additional service labels (e.g. for filtering Service by custom labels)
#   labels: {}
#   # -- Additional entries here will be added to the service spec.
#   # -- Cannot contain type, selector or ports entries.
#   spec: {}
#   # externalTrafficPolicy: Cluster
#   # loadBalancerIP: "1.2.3.4"
#   # clusterIP: "2.3.4.5"
#   loadBalancerSourceRanges: []
#   # - 192.168.0.1/32
#   # - 172.16.0.0/16
#   ## -- Class of the load balancer implementation
#   # loadBalancerClass: service.k8s.aws/nlb
#   externalIPs: []
#   # - 1.2.3.4
#   ## One of SingleStack, PreferDualStack, or RequireDualStack.
#   # ipFamilyPolicy: SingleStack
#   ## List of IP families (e.g. IPv4 and/or IPv6).
#   ## ref: https://kubernetes.io/docs/concepts/services-networking/dual-stack/#services
#   # ipFamilies:
#   #   - IPv4
#   #   - IPv6
#   ##
#   additionalServices: {}
#   ## -- An additional and optional internal Service.
#   ## Same parameters as external Service
#   # internal:
#   #   type: ClusterIP
#   #   # labels: {}
#   #   # annotations: {}
#   #   # spec: {}
#   #   # loadBalancerSourceRanges: []
#   #   # externalIPs: []
#   #   # ipFamilies: [ "IPv4","IPv6" ]

# autoscaling:  # @schema additionalProperties: false
#   # -- Create HorizontalPodAutoscaler object.
#   # See EXAMPLES.md for more details.
#   enabled: false
#   # -- minReplicas is the lower limit for the number of replicas to which the autoscaler can scale down. It defaults to 1 pod.
#   minReplicas:  # @schema type:[integer, null]; minimum:0
#   # -- maxReplicas is the upper limit for the number of pods that can be set by the autoscaler; cannot be smaller than MinReplicas.
#   maxReplicas:  # @schema type:[integer, null]; minimum:0
#   # -- metrics contains the specifications for which to use to calculate the desired replica count (the maximum replica count across all metrics will be used).
#   metrics: []
#   # -- behavior configures the scaling behavior of the target in both Up and Down directions (scaleUp and scaleDown fields respectively).
#   behavior: {}
#   # -- scaleTargetRef points to the target resource to scale, and is used to the pods for which metrics should be collected, as well as to actually change the replica count.
#   scaleTargetRef:
#     apiVersion: apps/v1
#     kind: Deployment
#     name: "{{ template \"traefik.fullname\" . }}"

# persistence:
#   # -- Enable persistence using Persistent Volume Claims
#   # ref: http://kubernetes.io/docs/user-guide/persistent-volumes/.
#   # It can be used to store TLS certificates along with `certificatesResolvers.<name>.acme.storage`  option
#   enabled: false
#   name: data
#   existingClaim: ""
#   accessMode: ReadWriteOnce
#   size: 128Mi
#   storageClass: ""
#   volumeName: ""
#   path: /data
#   annotations: {}
#   # -- Only mount a subpath of the Volume into the pod
#   subPath: ""

# # -- Certificates resolvers configuration.
# # Ref: https://doc.traefik.io/traefik/https/acme/#certificate-resolvers
# # See EXAMPLES.md for more details.
# certificatesResolvers: {}

# # -- If hostNetwork is true, runs traefik in the host network namespace
# # To prevent unschedulable pods due to port collisions, if hostNetwork=true
# # and replicas>1, a pod anti-affinity is recommended and will be set if the
# # affinity is left as default.
# hostNetwork: false

# # -- Whether Role Based Access Control objects like roles and rolebindings should be created
# rbac:  # @schema additionalProperties: false
#   enabled: true
#   # When set to true:
#   # 1. It switches respectively the use of `ClusterRole` and `ClusterRoleBinding` to `Role` and `RoleBinding`.
#   # 2. It adds `disableIngressClassLookup` on Kubernetes Ingress with Traefik Proxy v3 until v3.1.4
#   # 3. It adds `disableClusterScopeResources` on Ingress and CRD (Kubernetes) providers with Traefik Proxy v3.1.2+
#   # **NOTE**: `IngressClass`, `NodePortLB` and **Gateway** provider cannot be used with namespaced RBAC.
#   # See [upstream documentation](https://doc.traefik.io/traefik/providers/kubernetes-ingress/#disableclusterscoperesources) for more details.
#   namespaced: false
#   # Enable user-facing roles
#   # https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles
#   aggregateTo: []
#   # List of Kubernetes secrets that are accessible for Traefik. If empty, then access is granted to every secret.
#   secretResourceNames: []

# # -- Enable to create a PodSecurityPolicy and assign it to the Service Account via RoleBinding or ClusterRoleBinding
# podSecurityPolicy:
#   enabled: false

# # -- The service account the pods will use to interact with the Kubernetes API
# serviceAccount:  # @schema additionalProperties: false
#   # If set, an existing service account is used
#   # If not set, a service account is created automatically using the fullname template
#   name: ""

# # -- Additional serviceAccount annotations (e.g. for oidc authentication)
# serviceAccountAnnotations: {}

# # -- [Resources](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/) for `traefik` container.
# resources: {}

# # -- This example pod anti-affinity forces the scheduler to put traefik pods
# # -- on nodes where no other traefik pods are scheduled.
# # It should be used when hostNetwork: true to prevent port conflicts
# affinity: {}
# #  podAntiAffinity:
# #    requiredDuringSchedulingIgnoredDuringExecution:
# #      - labelSelector:
# #          matchLabels:
# #            app.kubernetes.io/name: '{{ template "traefik.name" . }}'
# #            app.kubernetes.io/instance: '{{ .Release.Name }}-{{ include "traefik.namespace" . }}'
# #        topologyKey: kubernetes.io/hostname

# # -- nodeSelector is the simplest recommended form of node selection constraint.
# nodeSelector: {}
# # -- Tolerations allow the scheduler to schedule pods with matching taints.
# tolerations: []
# # -- You can use topology spread constraints to control
# # how Pods are spread across your cluster among failure-domains.
# topologySpreadConstraints: []
# # This example topologySpreadConstraints forces the scheduler to put traefik pods
# # on nodes where no other traefik pods are scheduled.
# #  - labelSelector:
# #      matchLabels:
# #        app.kubernetes.io/name: '{{ template "traefik.name" . }}'
# #    maxSkew: 1
# #    topologyKey: kubernetes.io/hostname
# #    whenUnsatisfiable: DoNotSchedule

# # -- [Pod Priority and Preemption](https://kubernetes.io/docs/concepts/scheduling-eviction/pod-priority-preemption/)
# priorityClassName: ""

# -- [SecurityContext](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#security-context-1)
# @default -- See _values.yaml_
securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop: [ALL]
  readOnlyRootFilesystem: true

# -- [Pod Security Context](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#security-context)
# @default -- See _values.yaml_
podSecurityContext:
  runAsGroup: 65532
  runAsNonRoot: true
  runAsUser: 65532

#
# -- Extra objects to deploy (value evaluated as a template)
#
# In some cases, it can avoid the need for additional, extended or adhoc deployments.
# See #595 for more details and traefik/tests/values/extra.yaml for example.
extraObjects: []

# -- This field override the default Release Namespace for Helm.
# It will not affect optional CRDs such as `ServiceMonitor` and `PrometheusRules`
namespaceOverride: ""

# -- This field override the default app.kubernetes.io/instance label for all Objects.
instanceLabelOverride: ""

# -- This field override the default version extracted from image.tag
versionOverride: ""
